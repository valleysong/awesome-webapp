INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
DEBUG:asyncio:Using selector: SelectSelector
INFO:root:create database connection pool...
INFO:root:init jinja2...
INFO:root:set jinja2 template path: E:\Code\Python\web\awesome-webapp\web\templates
INFO:root:add route GET /api/blogs => api_blogs(page)
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content)
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(request, id)
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id)
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:add route POST /api/users => api_register_user(email, name, passwd)
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content)
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:add route GET /blog/{id} => get_blog(id)
INFO:root:add route GET / => index(page)
INFO:root:add route GET /manage/ => manage()
INFO:root:add route GET /manage/blogs => manage_blogs(page)
INFO:root:add route GET /manage/comments => manage_comments(page)
INFO:root:add route GET /manage/blogs/create => manage_create_blog()
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(id)
INFO:root:add route GET /manage/users => manage_users(page)
INFO:root:add route GET /register => register()
INFO:root:add route GET /signin => signin()
INFO:root:add route GET /signout => signout(request)
INFO:root:add static /static/ => E:\Code\Python\web\awesome-webapp\web\static
INFO:root:server started at http://127.0.0.1:8000...
INFO:root:Request: GET /
INFO:root:check user: GET /
INFO:root:SQL: select `id`, `passwd`, `email`, `name`, `admin`, `image`, `created_at` from `users` where `id`=?
INFO:root:rows returned: 1
INFO:root:set current user: admin@bcqhgs.com
INFO:root:Response handler...
INFO:root:call with args: {}
ERROR:aiohttp.web:Error handling request
Traceback (most recent call last):
  File "D:\Program Files (x86)\Python\lib\site-packages\aiohttp\server.py", line 285, in start
    yield from self.handle_request(message, payload)
  File "D:\Program Files (x86)\Python\lib\site-packages\aiohttp\web.py", line 90, in handle_request
    resp = yield from handler(request)
  File "E:/Code/Python/web/awesome-webapp/web/app.py", line 52, in logger
    return (await handler(request))
  File "E:/Code/Python/web/awesome-webapp/web/app.py", line 68, in auth
    return (await handler(request))
  File "E:/Code/Python/web/awesome-webapp/web/app.py", line 88, in response
    r = await handler(request)
  File "D:\Program Files (x86)\Python\lib\site-packages\aiohttp\web_urldispatcher.py", line 101, in handler_wrapper
    result = yield from result
  File "E:\Code\Python\web\awesome-webapp\web\coroweb.py", line 139, in __call__
    r = yield from self._func(**kw)
  File "D:\Program Files (x86)\Python\lib\asyncio\coroutines.py", line 209, in coro
    res = yield from res
  File "E:\Code\Python\web\awesome-webapp\web\handlers.py", line 81, in index
    num = yield from Blog.findNumber('count(id)')
TypeError: cannot 'yield from' a coroutine object in a non-coroutine generator
INFO:aiohttp.access:127.0.0.1 - - [08/Sep/2016:05:41:43 +0000] "GET / HTTP/1.1" 500 170 "-" "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36"
